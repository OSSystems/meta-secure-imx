Encryption Key Generation:
==========================
=> head /dev/urandom | tr -dc A-Za-z0-9 | head -c 20 ; echo ''
X7L66fH39ZMUqxl7sl2n
=> openssl enc -aes-256-cbc -k X7L66fH39ZMUqxl7sl2n -P -md sha1

Output:
======
salt=8394290208285DBD
key=56405D95D7E5C6EC32D463E26CB886986CA162E17B770275C827E21C4906F958
iv =EA772A6AB606DDF8EC9C55ACB7B216CC

=> openssl enc -aes-256-cbc -in <INFILE> -out <OUTFILE> -K <KEY> -iv <IV> -S <SALT>

Reference: https://sbabic.github.io/swupdate/encrypted_images.html

Private & Public Key Generation:
================================
=> head /dev/urandom | tr -dc A-Za-z0-9 | head -c 20 ; echo ''
GI43dVueoLXT3Nt3lyZE
=> echo "GI43dVueoLXT3Nt3lyZE" >passphrase
=> openssl genrsa -aes256 -passout file:passphrase -out swu_rsa_key.pem
=> openssl rsa -in swu_rsa_key.pem -out swu_rsa_pub_key.pem -outform PEM -pubout
Feed "GI43dVueoLXT3Nt3lyZE" as pass phrase when prompted

Reference: https://sbabic.github.io/swupdate/signed_images.html#usage-with-rsa-pkcs-1-5

HTTPS CA ceritificate for HAWKBIT:
==================================
=> openssl req -x509 -new -nodes -key swu_rsa_key.pem -sha256 -days 1825 -out rollouts-ca.crt
Feed "GI43dVueoLXT3Nt3lyZE" as pass phrase when prompted
=> mv rollouts-ca.crt ../../recipes-support/swupdate/files/
